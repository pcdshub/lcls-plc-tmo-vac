<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="PRG_PMPS" Id="{354279ff-d518-454c-b9bb-5f6640e67b86}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_PMPS
VAR
	fbArbiterIO : FB_SubSysToArbiter_IO;
	bRemove: BOOL;
	bRemove2: BOOL;
	bExist: BOOL;
	bExist2: BOOL;
	ID: UDINT;
	fb_VetoArbiter: FB_VetoArbiter;
	ff5_ff2_link_vac: FB_FastFault := (i_xAutoReset := TRUE, i_DevName := 'FF5 to FF2 Link', i_Desc := 'This is virtual FF5 fault, Please check ST4K4 downstream faulting device ', i_TypeCode := 16#9999);
    
    bM1K1Veto : BOOL;
	bST3K4Veto : BOOL;
	bST4K4Veto : BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
bM1K1Veto := NOT PMPS_GVL.stCurrentBeamParameters.aVetoDevices[PMPS.K_Stopper.MR1K1_OUT] 
                AND PMPS_GVL.stCurrentBeamParameters.aVetoDevices[PMPS.K_Stopper.MR1K1_IN];
bST3K4Veto := PMPS_GVL.stCurrentBeamParameters.aVetoDevices[PMPS.K_Stopper.ST3K4] OR bM1K1Veto;
bST4K4Veto := PMPS_GVL.stCurrentBeamParameters.aVetoDevices[PMPS.K_Stopper.ST4K4] OR bST3K4Veto;
(*FastFaultOuput*)
// Everything upstream ST3K4
g_FastFaultOutput1.Execute(i_xVeto:=bM1K1Veto, bAutoReset:= TRUE);

// Everything downstream of ST3K4
g_FastFaultOutput2.Execute(i_xVeto:=bST3K4Veto, bAutoReset:= TRUE);
// Everything downstream of ST4K4
g_FastFaultOutput5.Execute(i_xVeto:=bST4K4Veto, bAutoReset:= TRUE);
ff5_ff2_link_vac(
    io_fbFFHWO := GVL_PMPS.g_FastFaultOutput2,
    i_xOK := GVL_PMPS.g_FastFaultOutput5.q_xFastFaultOut);
	
// Preemptive system
fbArbiterIO(Arbiter := g_fbArbiter1, fbFFHWO := g_FastFaultOutput1,
	i_bVeto := bM1K1Veto);
    
fb_VetoArbiter(bVeto:= PMPS_GVL.stCurrentBeamParameters.aVetoDevices[PMPS.K_Stopper.ST3K4],
		HigherAuthority:=g_fbArbiter1 , 
		LowerAuthority:= g_fbArbiter2 , FFO:= g_FastFaultOutput2);


//Test and diagnostic stuff
bExist:= g_fbArbiter1.CheckRequestInPool(ID);
bExist2:= g_fbArbiter2.CheckRequestInPool(ID);
if (bRemove) THEN
	g_fbArbiter1.RemoveRequest(ID);
END_IF
if (bRemove2) THEN
	g_fbArbiter2.RemoveRequest(ID);
END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>